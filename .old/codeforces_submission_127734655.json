{"checkerStdoutAndStderr#22":"ok found \u00277441.8654430\u0027, expected \u00277441.8654920\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#23":"ok found \u00271840.5994521\u0027, expected \u00271840.5994532\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#20":"ok found \u002710866.4937795\u0027, expected \u002710866.4939002\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#21":"ok found \u00278977.8334850\u0027, expected \u00278977.8340472\u0027, error \u00270.0000001\u0027\r\n","checkerStdoutAndStderr#26":"ok found \u002722182.5189844\u0027, expected \u002722182.5190182\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#27":"ok found \u002716459.5283109\u0027, expected \u002716459.5289921\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#24":"ok found \u002722719.3634282\u0027, expected \u002722719.3640417\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#25":"ok found \u00271621.9669769\u0027, expected \u00271621.9670030\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#28":"ok found \u00271034.7083665\u0027, expected \u00271034.7089850\u0027, error \u00270.0000006\u0027\r\n","checkerStdoutAndStderr#29":"ok found \u00276271.4894148\u0027, expected \u00276271.4894161\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#11":"ok found \u00275339.3557883\u0027, expected \u00275339.3557895\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#12":"ok found \u00279009.2514291\u0027, expected \u00279009.2517752\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#10":"ok found \u00271152.2133095\u0027, expected \u00271152.2135172\u0027, error \u00270.0000002\u0027\r\n","checkerStdoutAndStderr#15":"ok found \u00273149.4310513\u0027, expected \u00273149.4310733\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#16":"ok found \u0027438.8575929\u0027, expected \u0027438.8576078\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#13":"ok found \u00271452.5285131\u0027, expected \u00271452.5286633\u0027, error \u00270.0000001\u0027\r\n","checkerStdoutAndStderr#14":"ok found \u002728242.1751210\u0027, expected \u002728242.1766374\u0027, error \u00270.0000001\u0027\r\n","rejected#4":"false","rejected#3":"false","rejected#2":"false","rejected#1":"false","rejected#9":"false","rejected#8":"false","rejected#7":"false","rejected#6":"false","rejected#5":"false","checkerStdoutAndStderr#19":"ok found \u002711191.0448604\u0027, expected \u002711191.0449310\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#17":"ok found \u002724908.6750262\u0027, expected \u002724908.6754044\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#18":"ok found \u002713324.7808271\u0027, expected \u002713324.7811333\u0027, error \u00270.0000000\u0027\r\n","verdict#50":"OK","exitCode#3":"0","exitCode#2":"0","exitCode#1":"0","verdict#40":"OK","verdict#41":"OK","exitCode#7":"0","exitCode#6":"0","output#39":"372.0930609560183\r\n","exitCode#5":"0","exitCode#4":"0","output#36":"2632.6875331736155\r\n","verdict#46":"OK","output#35":"36574.64603762439\r\n","verdict#47":"OK","output#38":"2437.508955378254\r\n","verdict#48":"OK","output#37":"19244.42729087098\r\n","verdict#49":"OK","output#32":"32799.666959538234\r\n","verdict#42":"OK","output#31":"16483.23326494948\r\n","verdict#43":"OK","output#34":"30115.2628014222\r\n","verdict#44":"OK","output#33":"31224.34650635033\r\n","verdict#45":"OK","output#41":"25142.855908815025\r\n","output#40":"5669.994349635011\r\n","verdict#30":"OK","output#29":"6271.489414840133\r\n","output#28":"1034.708366459263\r\n","output#25":"1621.9669769277216\r\n","verdict#35":"OK","output#24":"22719.3634282266\r\n","verdict#36":"OK","output#27":"16459.528310930753\r\n","verdict#37":"OK","memoryConsumed#50":"7032832","output#26":"22182.51898435756\r\n","verdict#38":"OK","output#21":"8977.83348497032\r\n","verdict#31":"OK","output#20":"10866.493779478931\r\n","verdict#32":"OK","output#23":"1840.5994520719755\r\n","verdict#33":"OK","output#22":"7441.865442995507\r\n","verdict#34":"OK","checkerStdoutAndStderr#50":"ok found \u00271760.1399761\u0027, expected \u00271760.1400665\u0027, error \u00270.0000001\u0027\r\n","accepted#1":"true","accepted#3":"true","output#30":"13947.477130657328\r\n","accepted#2":"true","verdict#39":"OK","accepted#9":"true","accepted#8":"true","exitCode#9":"0","exitCode#8":"0","accepted#5":"true","accepted#4":"true","accepted#7":"true","accepted#6":"true","checkerStdoutAndStderr#44":"ok found \u002732087.4709556\u0027, expected \u002732087.4712055\u0027, error \u00270.0000000\u0027\r\n","memoryConsumed#49":"7061504","checkerStdoutAndStderr#45":"ok found \u002713799.6103138\u0027, expected \u002713799.6104405\u0027, error \u00270.0000000\u0027\r\n","memoryConsumed#48":"7045120","checkerStdoutAndStderr#42":"ok found \u002729051.5681950\u0027, expected \u002729051.5717131\u0027, error \u00270.0000001\u0027\r\n","memoryConsumed#47":"7020544","checkerStdoutAndStderr#43":"ok found \u00272386.0178953\u0027, expected \u00272386.0179248\u0027, error \u00270.0000000\u0027\r\n","memoryConsumed#46":"7065600","waiting":"false","checkerStdoutAndStderr#1":"ok found \u00271.0000000\u0027, expected \u00271.0000000\u0027, error \u00270.0000000\u0027\r\n","memoryConsumed#45":"7061504","checkerStdoutAndStderr#48":"ok found \u002714261.9224248\u0027, expected \u002714261.9225716\u0027, error \u00270.0000000\u0027\r\n","memoryConsumed#44":"7057408","checkerStdoutAndStderr#49":"ok found \u002726227.4785048\u0027, expected \u002726227.4789183\u0027, error \u00270.0000000\u0027\r\n","memoryConsumed#43":"7073792","checkerStdoutAndStderr#46":"ok found \u00277083.2627203\u0027, expected \u00277083.2630390\u0027, error \u00270.0000000\u0027\r\n","memoryConsumed#42":"7065600","checkerStdoutAndStderr#47":"ok found \u002725712.8048933\u0027, expected \u002725712.8076603\u0027, error \u00270.0000001\u0027\r\n","checkerStdoutAndStderr#5":"ok found \u002724043.7403414\u0027, expected \u002724043.7404681\u0027, error \u00270.0000000\u0027\r\n","verdict#24":"OK","memoryConsumed#41":"7053312","checkerStdoutAndStderr#4":"ok found \u002716617.2399847\u0027, expected \u002716617.2400277\u0027, error \u00270.0000000\u0027\r\n","verdict#25":"OK","memoryConsumed#40":"7065600","checkerStdoutAndStderr#3":"ok found \u00274268.8799751\u0027, expected \u00274268.8799751\u0027, error \u00270.0000000\u0027\r\n","verdict#26":"OK","checkerStdoutAndStderr#2":"ok found \u00279991.2787876\u0027, expected \u00279991.2789766\u0027, error \u00270.0000000\u0027\r\n","verdict#27":"OK","checkerStdoutAndStderr#9":"ok found \u0027780.9342628\u0027, expected \u0027780.9343170\u0027, error \u00270.0000001\u0027\r\n","verdict#20":"OK","checkerStdoutAndStderr#40":"ok found \u00275669.9943496\u0027, expected \u00275669.9944428\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#8":"ok found \u002723949.5521641\u0027, expected \u002723949.5522682\u0027, error \u00270.0000000\u0027\r\n","verdict#21":"OK","checkerStdoutAndStderr#41":"ok found \u002725142.8559088\u0027, expected \u002725142.8560494\u0027, error \u00270.0000000\u0027\r\n","checkerStdoutAndStderr#7":"ok found \u00276503.4476188\u0027, expected \u00276503.4476234\u0027, error \u00270.0000000\u0027\r\n","verdict#22":"OK","checkerStdoutAndStderr#6":"ok found \u00271505.2799567\u0027, expected \u00271505.2799737\u0027, error \u00270.0000000\u0027\r\n","verdict#23":"OK","verdict#28":"OK","verdict#29":"OK","memoryConsumed#39":"7053312","checkerStdoutAndStderr#33":"ok found \u002731224.3465064\u0027, expected \u002731224.3481787\u0027, error \u00270.0000001\u0027\r\n","memoryConsumed#38":"7057408","checkerStdoutAndStderr#34":"ok found \u002730115.2628014\u0027, expected \u002730115.2634679\u0027, error \u00270.0000000\u0027\r\n","memoryConsumed#37":"7032832","checkerStdoutAndStderr#31":"ok found \u002716483.2332649\u0027, expected \u002716483.2333724\u0027, error \u00270.0000000\u0027\r\n","memoryConsumed#36":"7053312","checkerStdoutAndStderr#32":"ok found \u002732799.6669595\u0027, expected \u002732799.6669718\u0027, error \u00270.0000000\u0027\r\n","memoryConsumed#35":"7061504","memoryConsumed#34":"7045120","checkerStdoutAndStderr#37":"ok found \u002719244.4272909\u0027, expected \u002719244.4278186\u0027, error \u00270.0000000\u0027\r\n","memoryConsumed#33":"7053312","checkerStdoutAndStderr#38":"ok found \u00272437.5089554\u0027, expected \u00272437.5089739\u0027, error \u00270.0000000\u0027\r\n","memoryConsumed#32":"7057408","checkerStdoutAndStderr#35":"ok found \u002736574.6460376\u0027, expected \u002736574.6462171\u0027, error \u00270.0000000\u0027\r\n","memoryConsumed#31":"7049216","checkerStdoutAndStderr#36":"ok found \u00272632.6875332\u0027, expected \u00272632.6875408\u0027, error \u00270.0000000\u0027\r\n","verdict#13":"OK","memoryConsumed#30":"7053312","output#47":"25712.804893348388\r\n","verdict#14":"OK","output#46":"7083.262720288431\r\n","verdict#15":"OK","output#49":"26227.478504758343\r\n","verdict#16":"OK","output#48":"14261.9224248369\r\n","contestName":"Codeforces Beta Round #1","output#43":"2386.0178952928177\r\n","verdict#10":"OK","checkerStdoutAndStderr#30":"ok found \u002713947.4771307\u0027, expected \u002713947.4774498\u0027, error \u00270.0000000\u0027\r\n","output#42":"29051.568195010594\r\n","verdict#11":"OK","output#45":"13799.610313821031\r\n","verdict#12":"OK","output#44":"32087.470955635552\r\n","output#50":"1760.1399761299738\r\n","verdict#17":"OK","verdict#18":"OK","verdict#19":"OK","checkerStdoutAndStderr#39":"ok found \u0027372.0930610\u0027, expected \u0027372.0930902\u0027, error \u00270.0000001\u0027\r\n","memoryConsumed#29":"7069696","memoryConsumed#28":"7045120","memoryConsumed#27":"7036928","output#1":"1.000000000000001\r\n","memoryConsumed#26":"7049216","memoryConsumed#25":"7053312","memoryConsumed#24":"7053312","memoryConsumed#23":"7073792","accepted#38":"true","memoryConsumed#22":"7073792","accepted#37":"true","memoryConsumed#21":"7061504","checkerExitCode#40":"0","memoryConsumed#20":"7045120","accepted#39":"true","checkerExitCode#39":"0","checkerExitCode#38":"0","output#8":"23949.55216407467\r\n","checkerExitCode#31":"0","accepted#45":"true","output#9":"780.9342627768208\r\n","checkerExitCode#30":"0","accepted#44":"true","output#6":"1505.2799567169864\r\n","checkerExitCode#33":"0","accepted#47":"true","output#7":"6503.447618806409\r\n","checkerExitCode#32":"0","accepted#46":"true","output#4":"16617.23998465127\r\n","checkerExitCode#35":"0","accepted#41":"true","output#5":"24043.740341410205\r\n","memoryConsumed#19":"7036928","checkerExitCode#34":"0","accepted#40":"true","output#2":"9991.278787608775\r\n","memoryConsumed#18":"7057408","checkerExitCode#37":"0","accepted#43":"true","output#3":"4268.879975050851\r\n","memoryConsumed#17":"7061504","checkerExitCode#36":"0","accepted#42":"true","memoryConsumed#16":"7049216","memoryConsumed#15":"7028736","memoryConsumed#14":"7049216","memoryConsumed#13":"7045120","memoryConsumed#12":"7061504","accepted#49":"true","memoryConsumed#11":"7065600","accepted#48":"true","memoryConsumed#10":"7053312","checkerExitCode#50":"0","memoryConsumed#2":"7057408","memoryConsumed#3":"7049216","checkerExitCode#49":"0","memoryConsumed#4":"7069696","accepted#50":"true","memoryConsumed#5":"7057408","memoryConsumed#6":"7073792","memoryConsumed#7":"7049216","memoryConsumed#8":"7061504","verdict":"\u003cspan class\u003d\u0027verdict-accepted\u0027\u003eAccepted\u003c/span\u003e","memoryConsumed#9":"7057408","input#5":"115.715093 141.583620\r\n136.158119 -23.780834\r\n173.673212 64.802787\r\n","checkerExitCode#42":"0","input#6":"17.288379 68.223317\r\n48.776683 71.688379\r\n23.170559 106.572762\r\n","checkerExitCode#41":"0","input#7":"76.820252 66.709341\r\n61.392328 82.684207\r\n44.267775 -2.378694\r\n","checkerExitCode#44":"0","input#8":"-46.482632 -31.161247\r\n19.689679 -70.646972\r\n-17.902656 -58.455808\r\n","checkerExitCode#43":"0","input#1":"0.000000 0.000000\r\n1.000000 1.000000\r\n0.000000 1.000000\r\n","checkerExitCode#46":"0","input#2":"71.756151 7.532275\r\n-48.634784 100.159986\r\n91.778633 158.107739\r\n","checkerExitCode#45":"0","input#3":"18.716839 40.852752\r\n66.147248 -4.083161\r\n111.083161 43.347248\r\n","checkerExitCode#48":"0","memoryConsumed#1":"7045120","input#4":"-13.242302 -45.014124\r\n-33.825369 51.083964\r\n84.512928 -55.134407\r\n","checkerExitCode#47":"0","accepted#19":"true","input#9":"34.236058 108.163949\r\n28.639345 104.566515\r\n25.610069 86.002927\r\n","accepted#16":"true","output#18":"13324.780827104058\r\n","accepted#15":"true","output#17":"24908.675026175675\r\n","accepted#18":"true","accepted#17":"true","output#19":"11191.044860393331\r\n","output#14":"28242.175121024804\r\n","output#13":"1452.5285130899501\r\n","output#16":"438.85759293951406\r\n","output#15":"3149.4310512578822\r\n","output#10":"1152.2133094781948\r\n","output#12":"9009.25142909054\r\n","output#11":"5339.355788296803\r\n","checkerExitCode#17":"0","checkerExitCode#16":"0","checkerExitCode#19":"0","checkerExitCode#18":"0","accepted#23":"true","accepted#22":"true","checkerExitCode#11":"0","accepted#25":"true","checkerExitCode#10":"0","accepted#24":"true","checkerExitCode#13":"0","checkerExitCode#12":"0","checkerExitCode#15":"0","accepted#21":"true","checkerExitCode#14":"0","accepted#20":"true","accepted#27":"true","accepted#26":"true","accepted#29":"true","accepted#28":"true","input#15":"1.514204 81.400629\r\n32.168797 100.161401\r\n7.778734 46.010993\r\n","checkerExitCode#28":"0","answer#50":"1760.14006648\r\n","input#14":"80.181999 -38.076894\r\n23.381778 122.535736\r\n47.118815 140.734014\r\n","checkerExitCode#27":"0","input#17":"12.272903 101.825792\r\n-51.240438 -12.708472\r\n-29.729299 77.882032\r\n","input#16":"84.409605 38.496141\r\n77.788313 39.553807\r\n75.248391 59.413884\r\n","checkerExitCode#29":"0","input#11":"36.856072 121.845502\r\n46.453956 109.898647\r\n-30.047767 77.590282\r\n","input#10":"25.428124 39.407248\r\n17.868098 39.785933\r\n11.028461 43.028890\r\n","input#13":"88.653021 18.024220\r\n51.942488 -2.527850\r\n76.164701 24.553012\r\n","input#12":"-18.643272 56.008305\r\n9.107608 -22.094058\r\n-6.456146 70.308320\r\n","checkerExitCode#20":"0","accepted#34":"true","accepted#33":"true","checkerExitCode#22":"0","accepted#36":"true","checkerExitCode#21":"0","accepted#35":"true","checkerExitCode#24":"0","accepted#30":"true","checkerExitCode#23":"0","checkerExitCode#26":"0","accepted#32":"true","checkerExitCode#25":"0","accepted#31":"true","input#19":"-20.003518 -4.671086\r\n93.588632 6.362759\r\n-24.748109 24.792124\r\n","timeConsumed#46":"60","input#18":"35.661751 27.283571\r\n96.513550 51.518022\r\n97.605986 131.258287\r\n","timeConsumed#47":"62","timeConsumed#48":"62","timeConsumed#49":"60","input#26":"122.381894 -48.763263\r\n163.634346 -22.427845\r\n26.099674 73.681862\r\n","timeConsumed#42":"92","input#25":"103.967164 63.475916\r\n86.466163 59.341930\r\n69.260229 73.258917\r\n","answer#40":"5669.99444283\r\n","timeConsumed#43":"92","input#28":"77.145533 85.041789\r\n67.452820 52.513188\r\n80.503843 85.000149\r\n","answer#41":"25142.85604936\r\n","timeConsumed#44":"122","input#27":"119.209229 133.905087\r\n132.001535 22.179509\r\n96.096673 0.539763\r\n","answer#42":"29051.57171313\r\n","timeConsumed#45":"60","input#22":"51.679280 56.072393\r\n-35.819256 73.390532\r\n-10.661374 129.756454\r\n","answer#43":"2386.01792476\r\n","input#21":"-7.347450 36.971423\r\n84.498728 89.423536\r\n75.469963 98.022482\r\n","answer#44":"32087.47120554\r\n","input#24":"-16.356805 109.310423\r\n124.529388 25.066276\r\n-37.892043 80.604904\r\n","timeConsumed#40":"92","answer#45":"13799.61044048\r\n","input#23":"97.326813 61.492460\r\n100.982131 57.717635\r\n68.385216 22.538372\r\n","timeConsumed#41":"62","answer#46":"7083.26303902\r\n","answer#47":"25712.80766033\r\n","answer#48":"14261.92257159\r\n","input#20":"93.583067 132.858352\r\n63.834975 19.353720\r\n33.677824 102.529376\r\n","answer#49":"26227.47891833\r\n","timeConsumed#39":"92","timeConsumed#35":"62","input#29":"28.718442 36.116251\r\n36.734593 35.617015\r\n76.193973 99.136077\r\n","timeConsumed#36":"92","timeConsumed#37":"124","timeConsumed#38":"92","timeConsumed#31":"124","input#37":"72.873708 -59.083734\r\n110.911118 -6.206576\r\n-44.292395 13.106202\r\n","timeConsumed#32":"92","input#36":"104.636703 49.583778\r\n85.940583 95.426299\r\n69.375168 93.234795\r\n","answer#30":"13947.47744984\r\n","timeConsumed#33":"92","input#39":"6.949504 69.606390\r\n26.139268 72.136945\r\n24.032442 57.407195\r\n","answer#31":"16483.23337238\r\n","timeConsumed#34":"124","input#38":"49.320630 48.119616\r\n65.888396 93.514980\r\n27.342377 97.600590\r\n","answer#32":"32799.66697178\r\n","input#33":"40.562163 -47.610606\r\n10.073051 -54.490068\r\n54.625875 -40.685797\r\n","input#32":"55.957968 -72.765994\r\n39.787413 -75.942282\r\n24.837014 128.144762\r\n","answer#33":"31224.34817875\r\n","answer#34":"30115.26346791\r\n","input#35":"105.530943 80.920069\r\n40.206723 125.323331\r\n40.502256 -85.455877\r\n","timeConsumed#30":"62","input#34":"20.965151 74.716562\r\n167.264364 81.864800\r\n5.931644 48.813212\r\n","answer#35":"36574.64621711\r\n","accepted#12":"true","answer#36":"2632.68754075\r\n","accepted#11":"true","answer#37":"19244.42781859\r\n","accepted#14":"true","input#31":"46.172435 -22.819705\r\n17.485134 -1.663888\r\n101.027565 111.619705\r\n","answer#38":"2437.50897386\r\n","accepted#13":"true","input#30":"0.376916 17.054676\r\n100.187614 85.602831\r\n1.425829 132.750915\r\n","answer#39":"372.09309018\r\n","accepted#10":"true","timeConsumed#28":"92","timeConsumed#29":"92","timeConsumed#24":"60","timeConsumed#25":"124","timeConsumed#26":"122","timeConsumed#27":"124","timeConsumed#20":"122","input#48":"42.147045 64.165917\r\n70.260284 4.962470\r\n10.532991 76.277713\r\n","timeConsumed#21":"62","input#47":"31.312532 151.532355\r\n182.646053 56.534075\r\n15.953947 127.065925\r\n","timeConsumed#22":"122","answer#20":"10866.49390021\r\n","timeConsumed#23":"62","input#49":"129.400249 -44.695226\r\n122.278798 -53.696996\r\n44.828427 -83.507917\r\n","answer#21":"8977.83404724\r\n","input#44":"165.094169 94.574129\r\n46.867578 147.178855\r\n174.685774 62.705213\r\n","answer#22":"7441.86549199\r\n","input#43":"80.895061 94.491414\r\n42.361631 65.191687\r\n77.556800 76.694829\r\n","answer#23":"1840.59945324\r\n","input#46":"139.847022 19.153937\r\n104.096879 75.379874\r\n49.164271 46.404632\r\n","answer#24":"22719.36404168\r\n","input#45":"146.604506 -3.502359\r\n24.935572 44.589981\r\n106.160918 -51.162271\r\n","answer#25":"1621.96700296\r\n","input#40":"-21.925928 -24.623076\r\n-33.673619 -11.677794\r\n4.692348 52.266292\r\n","answer#26":"22182.51901824\r\n","answer#27":"16459.52899209\r\n","input#42":"-56.880888 172.997993\r\n81.126977 42.144034\r\n-51.413417 17.057807\r\n","answer#28":"1034.70898496\r\n","input#41":"109.515505 37.575315\r\n5.377080 101.729711\r\n17.501630 103.324931\r\n","answer#29":"6271.48941610\r\n","timeConsumed#17":"62","timeConsumed#18":"62","timeConsumed#19":"60","timeConsumed#13":"62","timeConsumed#14":"60","timeConsumed#15":"92","timeConsumed#16":"92","timeConsumed#10":"92","timeConsumed#11":"154","timeConsumed#12":"122","answer#10":"1152.21351717\r\n","answer#11":"5339.35578947\r\n","answer#12":"9009.25177521\r\n","answer#13":"1452.52866331\r\n","answer#14":"28242.17663744\r\n","answer#15":"3149.43107333\r\n","input#50":"28.420253 0.619862\r\n10.966628 21.724132\r\n14.618862 10.754642\r\n","answer#16":"438.85760782\r\n","answer#17":"24908.67540438\r\n","answer#18":"13324.78113326\r\n","answer#19":"11191.04493104\r\n","checkerExitCode#1":"0","checkerExitCode#2":"0","checkerExitCode#3":"0","checkerExitCode#4":"0","checkerExitCode#5":"0","checkerExitCode#6":"0","checkerExitCode#7":"0","checkerExitCode#8":"0","checkerExitCode#9":"0","compilationError":"false","timeConsumed#50":"124","verdict#1":"OK","verdict#5":"OK","answer#6":"1505.27997374\r\n","verdict#4":"OK","answer#5":"24043.74046813\r\n","verdict#3":"OK","answer#8":"23949.55226823\r\n","source":"import math\r\n\r\na \u003d tuple(map(float,input().split(\u0027 \u0027)))\r\nb \u003d tuple(map(float,input().split(\u0027 \u0027)))\r\nc \u003d tuple(map(float,input().split(\u0027 \u0027)))\r\n\r\nassert all(abs(x) \u003c\u003d 1000.0 for x in a+b+c)\r\n\r\ndef vec(p1,p2): return (p2[0]-p1[0], p2[1]-p1[1]) # vector between 2 points\r\ndef dot(v1,v2): return v1[0]*v2[0] + v1[1]*v2[1] # vector dot product\r\ndef mag(v): return math.sqrt(v[0]**2 + v[1]**2) # vector magnitude\r\n\r\n# angle between 2 vectors: cos(angle) \u003d (v1 dot v2) / (|v1| * |v2|)\r\ndef angle(v1,v2): return math.acos(dot(v1,v2)/(mag(v1)*mag(v2)))\r\n\r\n# is close enough to an integer\r\n# started with 2**-32, was too small\r\ndef is_int(a):\r\n    return abs(a-round(a)) \u003c 2**-16\r\n\r\n# compute arcs AB, AC, BC using the 3 points on the circle\r\narc_ab \u003d 2*angle(vec(c,a),vec(c,b))\r\narc_ac \u003d 2*angle(vec(b,a),vec(b,c))\r\narc_bc \u003d 2*angle(vec(a,b),vec(a,c))\r\n\r\n# determine number of sides, given that it will never be \u003e 100\r\nfor sides in range(3,100+1):\r\n    arc_side \u003d 2*math.pi/sides\r\n    sides_ab \u003d arc_ab/arc_side\r\n    sides_ac \u003d arc_ac/arc_side\r\n    sides_bc \u003d arc_bc/arc_side\r\n    if is_int(sides_ab) and is_int(sides_ac) and is_int(sides_bc):\r\n        num_sides \u003d sides\r\n        break\r\n\r\nif \u0027num_sides\u0027 not in dir():\r\n    num_sides \u003d -1 # should be wrong answer\r\n\r\n# radius of circumcircle r \u003d abc / (4*A) (side lengths and area)\r\nlen_ab \u003d mag(vec(a,b))\r\nlen_ac \u003d mag(vec(a,c))\r\nlen_bc \u003d mag(vec(b,c))\r\ns \u003d (len_ab+len_ac+len_bc)/2\r\narea \u003d math.sqrt(s*(s-len_ab)*(s-len_ac)*(s-len_bc))\r\nradius \u003d len_ab*len_ac*len_bc / (4*area)\r\n\r\n# compute area of regular polygon \u003d n * r^2 * cos(a) * sin(a)\r\n# a \u003d 2*pi/(2n) \u003d pi/n (n sides)\r\nalpha \u003d math.pi/num_sides\r\narea_solution \u003d num_sides * radius**2 * math.cos(alpha) * math.sin(alpha)\r\n\r\nprint(area_solution)\r\n","verdict#2":"OK","answer#7":"6503.44762335\r\n","verdict#9":"OK","verdict#8":"OK","answer#9":"780.93431702\r\n","verdict#7":"OK","verdict#6":"OK","answer#2":"9991.27897663\r\n","answer#1":"1.00000000\r\n","answer#4":"16617.24002771\r\n","answer#3":"4268.87997505\r\n","timeConsumed#2":"60","timeConsumed#3":"60","timeConsumed#4":"124","timeConsumed#5":"122","timeConsumed#1":"60","timeConsumed#6":"92","timeConsumed#7":"92","timeConsumed#8":"62","timeConsumed#9":"122","rejected#45":"false","rejected#46":"false","rejected#43":"false","rejected#44":"false","rejected#41":"false","rejected#42":"false","rejected#40":"false","partyName":"\u003cspan title\u003d\"Unrated, tkoz\" class\u003d\"rated-user user-black\"\u003etkoz\u003c/span\u003e","href":"/contest/1/submission/127734655","rejected#49":"false","rejected#47":"false","rejected#48":"false","rejected#34":"false","rejected#35":"false","rejected#32":"false","rejected#33":"false","rejected#30":"false","rejected#31":"false","prevId":"127734580","rejected#38":"false","rejected#39":"false","rejected#36":"false","rejected#37":"false","prettifyClass":"lang-py","exitCode#15":"0","exitCode#16":"0","exitCode#17":"0","exitCode#18":"0","exitCode#11":"0","exitCode#12":"0","exitCode#13":"0","exitCode#14":"0","exitCode#10":"0","rejected#50":"false","exitCode#26":"0","testCount":"50","exitCode#27":"0","exitCode#28":"0","exitCode#29":"0","exitCode#22":"0","exitCode#23":"0","exitCode#24":"0","exitCode#25":"0","exitCode#20":"0","problemName":"(C) Ancient Berland Circus","exitCode#21":"0","exitCode#19":"0","exitCode#37":"0","exitCode#38":"0","exitCode#39":"0","exitCode#33":"0","exitCode#34":"0","exitCode#35":"0","exitCode#36":"0","exitCode#30":"0","exitCode#31":"0","exitCode#32":"0","exitCode#48":"0","exitCode#49":"0","exitCode#44":"0","exitCode#45":"0","exitCode#46":"0","exitCode#47":"0","exitCode#40":"0","exitCode#41":"0","exitCode#42":"0","exitCode#43":"0","rejected#23":"false","rejected#24":"false","rejected#21":"false","rejected#22":"false","rejected#20":"false","rejected#29":"false","rejected#27":"false","rejected#28":"false","rejected#25":"false","rejected#26":"false","exitCode#50":"0","rejected#12":"false","rejected#13":"false","rejected#10":"false","rejected#11":"false","rejected#18":"false","rejected#19":"false","rejected#16":"false","rejected#17":"false","rejected#14":"false","rejected#15":"false"}